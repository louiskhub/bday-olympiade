// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Players",
    columns: [{ name: "name", type: "string", unique: true }],
    revLinks: [
      { column: "player1", table: "Teams" },
      { column: "player2", table: "Teams" },
    ],
  },
  {
    name: "Teams",
    columns: [
      {
        name: "player1",
        type: "link",
        link: { table: "Players" },
        unique: true,
      },
      {
        name: "player2",
        type: "link",
        link: { table: "Players" },
        unique: true,
      },
    ],
    revLinks: [{ column: "team", table: "Team_Games" }],
  },
  {
    name: "Team_Games",
    columns: [
      { name: "team", type: "link", link: { table: "Teams" } },
      { name: "game", type: "link", link: { table: "TeamGames" } },
      { name: "wins", type: "int", notNull: true, defaultValue: "0" },
    ],
  },
  {
    name: "TeamGames",
    columns: [],
    revLinks: [{ column: "game", table: "Team_Games" }],
  },
  {
    name: "IndividualGames",
    columns: [],
    revLinks: [{ column: "game", table: "Individual_Games" }],
  },
  {
    name: "Individual_Games",
    columns: [
      { name: "player", type: "string" },
      { name: "game", type: "link", link: { table: "IndividualGames" } },
      { name: "time", type: "float" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Players = InferredTypes["Players"];
export type PlayersRecord = Players & XataRecord;

export type Teams = InferredTypes["Teams"];
export type TeamsRecord = Teams & XataRecord;

export type TeamGames = InferredTypes["Team_Games"];
export type TeamGamesRecord = TeamGames & XataRecord;

export type TeamGames = InferredTypes["TeamGames"];
export type TeamGamesRecord = TeamGames & XataRecord;

export type IndividualGames = InferredTypes["IndividualGames"];
export type IndividualGamesRecord = IndividualGames & XataRecord;

export type IndividualGames = InferredTypes["Individual_Games"];
export type IndividualGamesRecord = IndividualGames & XataRecord;

export type DatabaseSchema = {
  Players: PlayersRecord;
  Teams: TeamsRecord;
  Team_Games: TeamGamesRecord;
  TeamGames: TeamGamesRecord;
  IndividualGames: IndividualGamesRecord;
  Individual_Games: IndividualGamesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://kapplouis-s-workspace-tnvj9h.eu-central-1.xata.sh/db/olympiade:main",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
